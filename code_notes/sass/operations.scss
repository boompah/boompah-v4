////////////////////
// Basic Operation
////////////////////

// SASS

block {
	font-size: 12 / 16 * 1em;
	width: 500 / 16 * 1em;
	padding: 20 / 16 * 1em;
	margin: 25 * 1%;
}

// CSS

block {
  font-size: 0.75em;
  width: 31.25em;
  padding: 1.25em;
  margin: 25%;
}

////////////////////
// Operation inside a function
////////////////////

// SASS

@function em($target, $context: $default-font-size) {
	@return $target / $context * 1em;
}
	
@function percent($target) {
	@return $target * 1%
}

$base-font-size: 16;
$default-font-size: 12;

html {
	font-size: em($default-font-size, $base-font-size);
}
	
.class {
	font-size: em(12);
	width: em(500);
	padding: em(20);
	margin: percent(25);
}

// CSS

html {
  font-size: 0.75em;
}

.class {
  font-size: 1em;
  width: 41.66667em;
  padding: 1.66667em;
  margin: 25%;
}

////////////////////
// Color Operations
////////////////////

// SASS

$background-color: #ff00aa;
$text-color: #2693ff;
$border-color: $background-color * $text-color;

.box {
	color: $text-color;
	background-color: $background-color;
	border: 1px solid $border-color;
}

// CSS

.box {
  color: #2693ff;
  background-color: #ff00aa;
  border: 1px solid magenta;
}

////////////////////
// Operations with directive
////////////////////

// Example 01

// SASS

$width: 800px;
$padding: 20px;
$border-width: 1px;

.box {
	box-sizing: border-box;
	width: $width;
	@if $padding > 0 {
		padding: $padding;
	}
	@if border-width != 0 {
		border: $border-width solid black;
	}
	$no-box-width: $width - ($padding * 2 + $border-width *2);
	@if $no-box-width < $width {
		.no-boxsizing & {
			width: $no-box-width;
		}
	}
}

// CSS

.box {
  box-sizing: border-box;
  width: 800px;
  padding: 20px;
  border: 1px solid black;
}
.no-boxsizing .box {
  width: 758px;
}


// Example 02

// SASS

$width: 800px;
$padding: 0;
$border-width: 0;

.box {
	box-sizing: border-box;
	width: $width;
	@if $padding > 0 {
		padding: $padding;
	}
	@if border-width != 0 {
		border: $border-width solid black;
	}
	$no-box-width: $width - ($padding * 2 + $border-width *2);
	@if $no-box-width < $width {
		.no-boxsizing & {
			width: $no-box-width;
		}
	}
}

// CSS

.box {
  box-sizing: border-box;
  width: 800px;
  border: 0 solid black;
}


////////////////////
// Operations: range of numbers
////////////////////

// SASS

$cols: 12;

@for $i from 1 through $cols {
	.grid_#{$i}of#{$cols} {
		@include grid($i, $grid_context: $cols);
	}
}

// CSS

.grid_1of12 {
	-mox-box-sizing: border-box;
	-webkit-box-sizing: border-box;
	-o-box-sizing: border-box;
	-ms-box-sizing: border-box;
	box-sizing: border-box;
	float: left;
	margin-left  10%;
	margin-right: 10%;
	width: 6.25%;
}

.grid_2of12 {
	-mox-box-sizing: border-box;
	-webkit-box-sizing: border-box;
	-o-box-sizing: border-box;
	-ms-box-sizing: border-box;
	box-sizing: border-box;
	float: left;
	margin-left  10%;
	margin-right: 10%;
	width: 6.25%;
}

// etc.

////////////////////
// Operations: range of numbers with silect placeholders
////////////////////

// SASS

$cols: 12;

@for $i from 1 through $cols {
		%grid_#{$i}of#{$cols} {
			@include grid($i, $grid_context: $cols);
		}
}

.box {
	@extend %grid_6of12;
}

////////////////////
// Operations: list of values
////////////////////

// SASS

$prefix-defaults: -moz- -webkit- -o- -ms- "" !default;

@mixin border-radius($border-radius, $prefixes: $prefix-defaults) {
	@each $prefix in $prefixes {
		#{$prefix}border-radius: $border-radius;
	}
}

.box {
	@include border-radius(10px);
}

// CSS

.box {
  -moz-border-radius: 10px;
  -webkit-border-radius: 10px;
  -o-border-radius: 10px;
  -ms-border-radius: 10px;
  border-radius: 10px;
}

////////////////////
// Operations Advanced: list of values
////////////////////

// SASS

$icons: (rss "\f09e"), (phone "\e001"), (headphones "\e008");

%standard-margin {
	margin-right: 0.25em;
}

@each $icon in $icons {
	%icon-#{nth($icon, 1)}:before{
		@extend %standard-margin;
		content: nth($icon, 2);
	}
}

.rss-tag {
	@extend %icon-rss;
}

.call-us {
	@extend %icon-phone;
}

.listen-now {
	@extend %icon-headphones;
}

// CSS

.rss-tag:before, .call-us:before, .listen-now:before {
  margin-right: 0.25em;
}

.rss-tag:before {
  content: "\f09e";
}

.call-us:before {
  content: "\e001";
}

.listen-now:before {
  content: "\e008";
}