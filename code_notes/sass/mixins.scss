////////////////////
// Basic Mixin
////////////////////

// Define

@mixin defualt-box {
	border: 1px solid black;
	box-shadow: 5px 5px 5px black;
	width: 75%;
	margin: 0 auto;
}

.my-new-class {
	@include default-box
}

// Output

.my-new-class {
	border: 1px solid black;
	box-shadow: 5px 5px 5px black;
	width: 75%;
	margin: 0 auto;
}

////////////////////
// Mixin with arguments
////////////////////

@mixin border($radius, $style) {
	-moz-border-radius: $radius;
	-webkit-border-radius: $radius;
	border-radius: $radius;
	border: $style;
}

.my-new-class {
	@include border(3px 3px 0 0, 1px solid orange);
}

.my-other-class {
	@include border(5px, 2px dotted red);
}

////////////////////
// Mixin with default arguments
////////////////////

// Define

@mixin border($radius: 3px, $style: 1px solid red) {
	-moz-border-radius: $radius;
	-webkit-border-radius: $radius;
	border-radius: $radius;
	border: $style;
}

// Call default argument
.my-new-class {
	@include border;
}

// Modify default argument
.my-other-class {
	@include border(3px 3px 0 0, 1px solid orange)
}

// Output

.my-new-class {
	-moz-border-radius: 3px;
	-webkit-border-radius: 3px;
	border-radius: 3px;
	border: 1px solid red;
}

.my-other-class {
	-mox-border-radius: 3px 3px 0 0;
	-webkit-border-radius: 3px 3px 0 0;
	border-radius: 3px 3px 0 0;
	border: 1px solid orange;
}

////////////////////
// Mixin with default GLOBAL arguments
////////////////////

$border-radius: 3px !default;
$border-style: 1px solid red !default;

@mixin border($radius: $border-radius, $style: $border-style) {
	-moz-border-radius: $radius;
	-webkit-border-radius: $radius;
	border-radius: $radius;
	border: $style;
}

.my-new-class {
	@include border;
}

.my-other-class {
	@include border(3px 3px 0 0, 1px solid orange);
}

.my-new-class {
	-moz-border-radius: 3px;
	-webkit-border-radius: 3px;
	border-radius: 3px;
	border: 1px solid red;
}

.my-other-class {
	-moz-border-radius: 3px 3px 0 0;
	-webkit-radius: 3px 3px 0 0;
	border-radius: 3px 3px 0 0;
	border: 1px solid orange;
}

////////////////////
// Mixin with expressions in Selectors and Property Name (interpolation)
////////////////////

// Define

$class-name: over-qualified-selector;
$css-attribute: border;

@mixin test-mixin($name, $attribute) {
	p.#{$name} {
		#{$attribute}-color: blue;
	}
}

@include test-mixin($class-name, $class-attribute);

// Output

p.over-qualified-selector {
	border-color: blue;
}